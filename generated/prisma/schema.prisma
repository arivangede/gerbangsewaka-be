// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  name          String
  email         String     @unique
  emailVerified DateTime?
  image         String?
  phone         String?
  phoneVerified DateTime?
  password      String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  roles         UserRole[]
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     UserRole[]
}

model UserRole {
  id        String   @id @default(uuid())
  userId    String
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])
}

model Area {
  id              String           @id @default(uuid())
  name            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  streetLightings StreetLighting[]
}

model RoadFunction {
  id              String           @id @default(uuid())
  name            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  streetLightings StreetLighting[]
}

model StreetLighting {
  id                      Int                       @id @default(autoincrement())
  name                    String
  latitude                Float
  longitude               Float
  roadfunction_id         String
  area_id                 String
  group                   String?
  poleType                String?
  poleHeight              String?
  poleMaterial            String?
  status                  StreetLightingStatus
  location                String
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  streetLightingAccessory StreetLightingAccessory[]
  lamp                    Lamp[]
  area                    Area                      @relation(fields: [area_id], references: [id])
  roadFunction            RoadFunction              @relation(fields: [roadfunction_id], references: [id])
}

enum StreetLightingStatus {
  Active
  Inactive
  UnderMaintenance
}

model Lamp {
  id                Int            @id @default(autoincrement())
  streetlighting_id Int
  brand             String
  type              String
  power             String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  streetLighting    StreetLighting @relation(fields: [streetlighting_id], references: [id])
}

model StreetLightingAccessory {
  id                Int            @id @default(autoincrement())
  name              String
  streetlighting_id Int
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  streetLighting    StreetLighting @relation(fields: [streetlighting_id], references: [id])
}
